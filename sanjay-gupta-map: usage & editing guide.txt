Sanjay Gupta Map: Code Usage and Editing Guide

1.) Creating SVG map
  - Use photopea to create svg map file (tutorial link here)
  - Think of your desired map name, you will later use it on your entire code and styles
  - Add your newly created SVG map by copying the svg code you created in photopea and paste it inside webflow using "embed code" element
    - The svg file structure should be like this, and make sure to add svg id:
        <svg id="svg-[add your desired map name here(w/o bracket)]" ... >
          <path d="sample-onlyxxxxxx xxxxx">
          // add the rest of your reamining paths
        </svg>
2.) Adding and Updating CSS
  - just copy the existing style on the example code(we can update it later), for now we just need to update the following css class/id naming:
    -path-[add your map name here(w/o bracket)]
    -#path-shadow-[add your map name here(w/o bracket)]
    -path-text-[add your map name here(w/o bracket)]
  - you can place it in another embed code element or either place it together with your existing embed code element that you recenlty used in svg file(which ever works best)
  - Congrats! Now your done creating the html and styles, lets now procced on map's script

3.) Adding and updating script(data array)
  -just copy the exisiting script on the example code(we can update it later)
  -rename the existing dataArray name with your own map's name(example are "miltonData" -> "yourmapsname")
  -update data array's content(donnot use the content example of miltonData and oakvilleData), data array's content should be matched with your svg file
    -all objects inside array should be update as follows:
        -name: name for each map's places
        -fill: default color of specific place(before hover state)
        -link: redirect link for each places inside the map
        -offsetX: use to adjust text element's position horizontally(set value to 0 if offset is not needed)
        -offsetY: use to adjust adjust text element's position vertically(set value to 0 if offset is not needed)
        -wordsPerLine: helps when you want to make the next word be placed into next line, set desired word per line
  -Congrats! Now you are done with the data, let's proceed to script's functions

4.) Updating script(function)
  -update the code the you will see at the very bottom of the script
    -applyFunc([add your map name here(w/o bracket and must be inside the double quote)], [update this with your dataArray name (w/o bracket)]);
  -Congrats! Now you are done with the initial map, let's proceed on how to to customize overall looks of the map


How to customize map's CSS and animation?
-
-
-






